capitalCamelCase:
List Item: firstItem
List Item quoted: "firstItem"
List Item capitalCamelCase: FirstItem
List Item: secondItem
List Item quoted: "secondItem"
List Item capitalCamelCase: SecondItem
orVoid:
<no value>
void
aValue
goType:
number: int64
string: string
boolean: bool
unknown: interface{}
SomethingElse: SomethingElse
goTypeWithModule:
number: int64
string: string
boolean: bool
SomethingElse: *model.SomethingElse
typescriptTypeWithModule:
number: number
string: string
boolean: boolean
unknown: unknown
any: any
SomethingElse: model.SomethingElse
isBasicType:
number: YES
string: YES
boolean: YES
SomethingElse: NO
uppercaseToCapitalized:
PUT: Put
replace:
a/b/${id}: a/b/:id
split:
a/b/c: b
splitIndexOf:
a/b/c: 1
splitIndexOfNegative:
a/b/c: -2
lowerNoUnderscore:
ABC_DEF_123: abcdef123
camelCaseNoUnderscore:
ABC_DEF_123: abcDef123
capitalCamelCaseNoUnderscore:
ABC_DEF_123: AbcDef123
upperSpaceToUnderscore:
a b 345 c: A_B_345_C
rustType:
number: i64
string: String
boolean: bool
SomethingElse: SomethingElse
camelCaseToLowerSnakeCase:
firstSecondThird: first_second_third
trimPrefix: Thing
trimSuffix: Thing
cutTakeBefore: /v2/abc/
cutTakeAfter: /efg
stringSliceContains true: affirmative
stringSliceContains false: affirmative
